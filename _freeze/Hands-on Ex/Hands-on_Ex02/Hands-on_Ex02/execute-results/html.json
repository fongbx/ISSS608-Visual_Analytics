{
  "hash": "3aa12849dd96503097c04dd605253356",
  "result": {
    "markdown": "---\ntitle: \"Hands-on Exercise 2\"\nsubtitle: \"Beyond ggplot2 Fundamentals\"\nauthor: \"Fong Bao Xian\"\n---\n\n\n# Overview\n\nIn this exercise, we will learn to make further customisations to charts in ggplot2. We will also be introduced to several ggplot2 extensions for creating more elegant and effective statistical graphics.\n\n# Getting Started\n\n## Install and Launch R packages\n\nIn this exercise, besides tidyverse, we will also explore other R packages as follows:\n\n-   For annotations and highlighting:\n    -   ggrepel: provides geoms for ggplot2 to repel overlapping text labels\n    -   gghighlight:\n-   For themes:\n    -   ggthemes: provides some extra themes, geoms, and scales for 'ggplot2'\n    -   hrbrthemes: provides typography-centric themes and theme components for ggplot2\n-   For multiple charts:\n    -   patchwork: for preparing composite figures\n    -   cowplot: for preparing publication-quality composite figures\n    -   gridExtra: for combining multiple figures\n\nThe code chunk below will be used to check if these packages have been installed and to load them into our working R environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman:: p_load(tidyverse, ggrepel, gghighlight, ggthemes, hrbrthemes, patchwork, cowplot, gridExtra)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\npackage 'gghighlight' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\fongb\\AppData\\Local\\Temp\\RtmpM9bUqW\\downloaded_packages\npackage 'ggthemes' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\fongb\\AppData\\Local\\Temp\\RtmpM9bUqW\\downloaded_packages\npackage 'cowplot' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\fongb\\AppData\\Local\\Temp\\RtmpM9bUqW\\downloaded_packages\npackage 'gridExtra' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\fongb\\AppData\\Local\\Temp\\RtmpM9bUqW\\downloaded_packages\n```\n:::\n:::\n\n\n## Import Data\n\nWe will import `Exam_data.csv` into the R environment using `read_csv()` function of `readr` package. The dataset comprises of year end examination grades of a cohort of Primary 3 students.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data <- read_csv(\"data/Exam_data.csv\")\n```\n:::\n\n\nThere are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.\n\n-   The categorical attributes are: ID, CLASS, GENDER and RACE.\n-   The continuous attributes are: MATHS, ENGLISH and SCIENCE.\n\n# Advanced customisation to ggplot2\n\n## Annotations and Highlights\n\n### Using geom_text() and geom_label()\n\n-   geom_text(): adds text directly to the plot\n-   geom_label(): draws a rectangle underneath the text, making it easier to read\n\n::: panel-tabset\n## geom_text\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x=MATHS, y=ENGLISH, label=ID)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100), ylim=c(0,100)) +\n  geom_text() + # alternatively we can include aes(label=ID) under geom_label()\n  ggtitle(\"English scores vs Maths scores for Primary 3\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## geom_label\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x=MATHS, y=ENGLISH, label=ID)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100), ylim=c(0,100)) +\n  geom_label() + # alternatively we can include aes(label=ID) under geom_label()\n  ggtitle(\"English scores vs Maths scores for Primary 3\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n:::\n\n::: callout-note\nOthers useful arguments for geom_text() and geom_label() are:\n\n-   nudge_x and nudge_y: let you offset labels from their corresponding points. The function position_nudge() can be also used\n\n-   hjust and vjust can now be character vectors (ggplot2 v \\>= 2.0.0): \"left\", \"center\", \"right\", \"bottom\", \"middle\", \"top\". New options include \"inward\" and \"outward\" which align text towards and away from the center of the plot respectively.\n\n-   fontface: Change fontface. Allowed values : 1 (normal), 2 (bold), 3 (italic) and 4 (bold.italic).\n:::\n\n### Using annotate() and annotation_custom()\n\n-   **annotate**(): useful for adding small text annotations at a particular location on the plot\n-   **annotation_custom**(): Adds static annotations that are the same in every panel\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x=MATHS)) +\n  geom_histogram(bins=20, fill='grey70') +\n  geom_vline(xintercept=mean(exam_data$MATHS),\n             colour='red', linetype='dashed', size=1) +\n  annotate(geom=\"text\", label=\"Mean\",\n           x=65, y=40, colour='red')\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### Using ggrepel: Avoid overlapping of text labels\n\nAlternatively, we can use R package [**ggrepel**](https://ggrepel.slowkow.com/), which is an extension and provides **geom** for ggplot2 to repel **overlapping text** labels away from each other. We simply replace **geom_text()** with [**geom_text_repel()**](https://ggrepel.slowkow.com/reference/geom_text_repel.html) and **geom_label()** with [**geom_label_repel**](https://ggrepel.slowkow.com/reference/geom_text_repel.html).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x=MATHS, y=ENGLISH, label=ID)) +\n  geom_point() +\n  coord_cartesian(xlim=c(0,100), ylim=c(0,100)) +\n  geom_label_repel() +\n  ggtitle(\"English scores vs Maths scores for Primary 3\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\nSome text labels will be discarded if they have too many overlaps. We can adjust the threshold by providing the `max.overlaps` argument to **geom_text_repel()** or **geom_label_repel()**.\n:::\n\nThere might be cases when there are specific points that we wish to highlight and label. We can do so by passing in the separate data and adding the **geom_text_repel()** and **geom_point()** for this separate dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# in this example, we want to highlight the top students\nexam_data_to_label <- exam_data %>% \n  filter(MATHS > 90 & ENGLISH > 90)\n\nggplot(data=exam_data, aes(x=MATHS, y=ENGLISH)) +\n  geom_point(colour='grey', alpha=0.8) +\n  geom_smooth(method=lm, size=0.5) +\n  coord_cartesian(xlim=c(0,100), ylim=c(0,100)) +\n  geom_label_repel(data=exam_data_to_label, aes(label=ID),\n                   fontface='bold', max.overlaps=Inf) +\n  geom_point(data=exam_data_to_label, colour='red') +\n  ggtitle(\"English scores vs Maths scores for Primary 3\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n### Using gghighlight: highlight areas in our plot\n\nWith [gghighlight](https://yutannihilation.github.io/gghighlight/articles/gghighlight.html), we can simply add the `gghighlight()` function to our plot with the conditions set to identify our subset.\n\nThe following code chunk shows a similar plot to the above but without the need to filter out and plot the data we wish to highlight separately.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x=MATHS, y=ENGLISH)) +\n  geom_point(colour = 'darkred', alpha=0.8) +\n  gghighlight(MATHS > 90 & ENGLISH > 90,\n              unhighlighted_colour = alpha(\"grey\", 0.4),\n              use_direct_label = T,\n              label_key = ID,\n              label_params = list(size = 4)) +\n  coord_cartesian(xlim=c(0,100), ylim=c(0,100)) +\n  ggtitle(\"English scores vs Maths scores for Primary 3\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nThe following is an example of gghighlight on bar charts.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data %>%\n  group_by(RACE) %>% \n  summarise(avgmaths = round(mean(MATHS, na.rm=T),1)) %>% \n  ggplot(aes(x=RACE, y=avgmaths)) +\n  geom_bar(stat=\"identity\", fill=\"darkred\") +\n  geom_text(aes(label=avgmaths), vjust=-0.4) +\n  gghighlight(RACE==\"Others\") +\n  coord_cartesian(ylim=c(0, 100)) +\n  ggtitle(\"Highlight with labels for all categories\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nIn the above plot, the labels appear for all categories. We can choose to hide text that we do not wish to highlight by moving geom_text() function after the gghighlight() function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data %>%\n  group_by(RACE) %>% \n  summarise(avgmaths = round(mean(MATHS, na.rm=T),1)) %>% \n  ggplot(aes(x=RACE, y=avgmaths)) +\n  geom_bar(stat=\"identity\", fill=\"darkred\") +\n  gghighlight(RACE==\"Others\") +\n  geom_text(aes(label=avgmaths), vjust=-0.4) +\n  coord_cartesian(ylim=c(0, 100)) +\n  ggtitle(\"Highlight with labels for highlighted category\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nFor more examples on gghighlight, refer [here](https://anhhoangduc.com/post/review-gghighlight/).\n\n## Themes\n\n### Built-in Themes\n\nggplot2 comes with eight [built-in themes](https://ggplot2.tidyverse.org/reference/ggtheme.html): `theme_gray()`, `theme_bw()`, `theme_classic()`, `theme_dark()`, `theme_light()`, `theme_linedraw()`, `theme_minimal()`, and `theme_void().`\n\nBelow is an example of a plot using the built-in theme: `theme_gray().`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x=MATHS)) +\n  geom_histogram(bins=20, fill='grey90', colour='grey25', boundary=100) +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n### Using [ggtheme](https://cran.r-project.org/web/packages/ggthemes/) package\n\nggthemes provides ['ggplot2' themes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/) that replicate the look of plots by Edward Tufte, Stephen Few, [Fivethirtyeight](https://fivethirtyeight.com/), [The Economist](https://www.economist.com/graphic-detail), 'Stata', 'Excel', and [The Wall Street Journal](https://www.pinterest.com/wsjgraphics/wsj-graphics/), among others. It also provides some extra geoms and scales for 'ggplot2'. Consult [this vignette](https://mran.microsoft.com/snapshot/2016-12-28/web/packages/ggthemes/vignettes/ggthemes.html) to learn more.\n\nBelow are some examples of the same plot in different ggthemes.\n\n::: panel-tabset\n## Economist\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x=MATHS)) +\n  geom_histogram(bins=20, fill='grey90', colour='grey25', boundary=100) +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n## Few\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x=MATHS)) +\n  geom_histogram(bins=20, fill='grey90', colour='grey25', boundary=100) +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_few()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n## WSJ\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x=MATHS)) +\n  geom_histogram(bins=20, fill='grey90', colour='grey25', boundary=100) +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_wsj()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## Tufte\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x=MATHS)) +\n  geom_histogram(bins=20, fill='grey90', colour='grey25', boundary=100) +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_tufte()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n## Excel\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x=MATHS)) +\n  geom_histogram(bins=20, fill='grey90', colour='grey25', boundary=100) +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_excel()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n## FiveThirtyEight\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, aes(x=MATHS)) +\n  geom_histogram(bins=20, fill='grey90', colour='grey25', boundary=100) +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_fivethirtyeight()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n:::\n\n### Using [hrbrthems](https://cinc.rud.is/web/packages/hrbrthemes/) package\n\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used. The second goal centers around productivity for a production workflow. In fact, this \"production workflow\" is the context for where the elements of hrbrthemes should be used. Consult [this vignette](https://cran.r-project.org/web/packages/hrbrthemes/vignettes/why_hrbrthemes.html) to learn more.\n\nIn the following example, the core theme: `theme_ipsum` (\"ipsum\" is Latin for \"precise\") uses Arial Narrow, and we can customise the elements of the chart using the arguments inside the theme.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100, color=\"grey25\", fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size=18, base_size=15, grid=\"Y\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n::: callout-note\n-   `axis_title_size` argument is used to increase the font size of the axis title to 18\n-   `base_size` argument is used to increase the default axis label to 15\n-   `grid` argument is used to remove the x-axis grid lines\n:::\n\n## Arrange Multiple Charts\n\nIt is not unusual that multiple graphs are required to tell a compelling visual story. There are several ggplot2 extensions provide functions to compose figure with multiple graphs. First let us create three statistical charts below.\n\n-   **Plot 1**: Histogram of Maths score\n-   **Plot 2:** Histogram of English score\n-   **Plot 3:** Scatterplot of English score vs Maths score\n\n::: panel-tabset\n## Plot 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- ggplot(data=exam_data, aes(x=MATHS)) +\n  geom_histogram(bins=20, boundary=100, colour='grey25', fill='grey90') +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle('Distribution of Maths score')\n\np1\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n## Plot 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\np2 <- ggplot(data=exam_data, aes(x=ENGLISH)) +\n  geom_histogram(bins=20, boundary=100, colour='grey25', fill='grey90') +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle('Distribution of English score')\n\np2\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n## Plot 3\n\n\n::: {.cell}\n\n```{.r .cell-code}\np3 <- ggplot(data=exam_data, aes(x=MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method='lm', size=0.5) +\n  coord_cartesian(xlim=c(0,100), ylim=c(0,100)) +\n  ggtitle('English score vs Maths score for Primary 3')\n\np3\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n:::\n\n### Using patchwork\n\n[Patchwork](https://patchwork.data-imaginist.com/) package has a very simple syntax where we can create layouts easily. Here's the general syntax that combines:\n\n-   \"+\" for simple addition of the plots together\n-   \"\\|\" operator to place ggplot2 graphs beside each other\n-   \"/\" operator to stack the graphs on top of each other\n-   \"()\" operator the define the sequence of the plotting\n\nTo learn more about, refer to [Plot Assembly](https://patchwork.data-imaginist.com/articles/guides/assembly.html) and [Elegant Graphics for Data Analysis](https://ggplot2-book.org/arranging-plots.html).\n\n#### Combining two ggplot2 graphs\n\nWith patchwork loaded, we can easily combine two graphs using the following code chunk.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 + p2\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n#### Combining three ggplot2 graphs\n\nWe can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:\n\n-   \"\\|\" operator to place ggplot2 graphs beside each other\n-   \"/\" operator to stack the graphs on top of each other\n-   \"()\" operator the define the sequence of the plotting\n\n\n::: {.cell}\n\n```{.r .cell-code}\n((p1 / p2) | p3) &\n  theme(title=element_text(size=8, face='bold'))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n#### Creating a composite figure with tag\n\nIn order to identify subplots in text, **patchwork** also provides auto-tagging capabilities as shown in the figure below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np123 <- ((p1 / p2) | p3) & theme(title=element_text(size=8, face='bold'))\np123 + plot_annotation(tag_levels=\"I\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n#### Creating composite figures on top of each other\n\nBeside providing functions to place plots next to each other based on the provided layout. With [`inset_element()`](https://patchwork.data-imaginist.com/reference/inset_element.html) of **patchwork**, we can place one or several plots or graphic elements freely on top or below another plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np3 + inset_element(p2, left=0.02, right=0.5,\n                   bottom=0.7, top=1)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n#### Creating a composite figure using patchwork and ggtheme\n\n\n::: {.cell}\n\n```{.r .cell-code}\n((p1 / p2) | p3) &\n  theme_economist() +\n  theme(title=element_text(size=6, face='bold'))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n### Using cowplot\n\nThe [cowplot](https://wilkelab.org/cowplot/articles/introduction.html) package, developed by Claus O. Wilke provides a publication-ready theme for ggplot2 and allows to combine multiple plots in the same figure.\n\n#### Creating quick plots using plot_grid()\n\n-   **plot_grid():** Easily combines multiple plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_grid(p1, p2, p3,\n          labels=c(\"A\", \"B\", \"C\"),\n          ncol=2, nrow=2)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n#### Specifying plot positions using ggdraw() + draw_plot() + draw_plot_label()\n\n-   **ggdraw() + draw_plot() + draw_plot_label():** Place graphs at particular locations with a particular sizes\n    -   **ggdraw():** Initialize an empty drawing canvas\n\n    -   **draw_plot():** Places a plot somewhere onto the drawing canvas.\n\n    -   **draw_plot_label():** Adds a plot label to the upper left corner of a graph. It can handle vectors of labels with associated coordinates\n\n::: callout-note\nBy default, coordinates run from 0 to 1, and the point (0, 0) is in the lower left corner of the canvas.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggdraw() +\n  draw_plot(p1, x=0, y=0.5, width=0.5, height=0.5) +\n  draw_plot(p2, x=0.5, y=0.5, width=0.5, height=0.5) +\n  draw_plot(p3, x=0, y=0, width=1, height=0.5) +\n  draw_plot_label(label=c(\"A\",\"B\",\"C\"),\n                  x=c(0,0.5,0), y=c(1,1,0.5), size=15)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n#### Saving plots using save_plot()\n\nUsually, we use **ggsave()** \\[in ggplot2 package\\] to save ggplots. However, when working with cowplot, the function **save_plot()** \\[in cowplot package\\] is preferred.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombined <- ggdraw() +\n  draw_plot(p1, x=0, y=0.5, width=0.5, height=0.5) +\n  draw_plot(p2, x=0.5, y=0.5, width=0.5, height=0.5) +\n  draw_plot(p3, x=0, y=0, width=1, height=0.5) +\n  draw_plot_label(label=c(\"A\",\"B\",\"C\"),\n                  x=c(0,0.5,0), y=c(1,1,0.5), size=15)\n\n# each individual subplot should have an aspect ratio of 1.8\nsave_plot(\"combined.pdf\", combined,\n          base_aspect_ratio=1.8)\n```\n:::\n\n\n### Using gridExtra\n\nThe function **grid.arrange()** \\[in the package gridExtra\\] is another solution for mixing multiple graphs. For more customisation and details, refer [here](http://www.sthda.com/english/wiki/wiki.php?id_contents=7930).\n\n::: callout-note\nIn the R code below layout_matrix is a 2x2 matrix (2 columns and 2 rows). Here, we are specifying that the first row (from top) comprises of plot 1 and plot 2 for columns 1 and 2, whereas the second row contains plot 3 spanning the 2 columns.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrid.arrange(p1, p2, p3, ncol=2, nrow=2,\n             layout_matrix=rbind(c(1,2), c(3,3)))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n# References\n\n-   [Patchwork R package goes nerd viral](https://www.littlemissdata.com/blog/patchwork)\n-   [ggrepel](https://ggrepel.slowkow.com/)\n-   [ggthemes](https://ggplot2.tidyverse.org/reference/ggtheme.html)\n-   [hrbrthemes](https://cinc.rud.is/web/packages/hrbrthemes/)\n-   [ggplot tips: Arranging plots](https://albert-rapp.de/post/2021-10-28-extend-plot-variety/)\n-   [ggplot2 Theme Elements Demonstration](https://henrywang.nl/ggplot2-theme-elements-demonstration/)\n-   [ggplot2 Theme Elements Reference Sheet](https://isabella-b.com/blog/ggplot2-theme-elements-reference/)\n-   [STHDA website](http://www.sthda.com/english/wiki/wiki.php?id_contents=7930)\n",
    "supporting": [
      "Hands-on_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
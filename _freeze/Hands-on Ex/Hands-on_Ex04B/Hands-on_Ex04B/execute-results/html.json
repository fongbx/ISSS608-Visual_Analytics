{
  "hash": "507c14c2b36a40a8e8d20d5f82d7c4f3",
  "result": {
    "markdown": "---\ntitle: \"Hands-on Exercise 4B\"\nsubtitle: \"Visual Statistical Analysis\"\nauthor: \"Fong Bao Xian\"\n---\n\n\n# Overview\n\nIn this hands-on exercise, we will gain hands-on experience on using:\n\n-   **ggstatsplot** package to create visual graphics with rich statistical information;\n-   **performance** package to visualise model diagnostics; and\n-   **parameters** package to visualise model parameters\n\n# Getting Started\n\n## Import and Launch R packages\n\nIn this exercise, we will launch and use the following packages:\n\n-   [**ggstatsplot**](https://indrajeetpatil.github.io/ggstatsplot/) is an extension of [**ggplot2**](https://ggplot2.tidyverse.org/) package for creating graphics with details from statistical tests included in the information-rich plots themselves.\n    -   To provide alternative statistical inference methods by default.\n    -   To follow best practices for statistical reporting. For all statistical tests reported in the plots, the default template abides by the [APA](https://my.ilstu.edu/~jhkahn/apastats.html) gold standard for statistical reporting.\n-   [**performance**](https://easystats.github.io/performance/) provide utilities for computing indices of model quality and goodness of fit, enabling assessment of model quality for different kinds of models\n-   [**parameters**](https://easystats.github.io/parameters/) provide utilities for processing the parameters of various statistical models, including the computation of p-values, CIs, Bayesian indices and other measures for a wide variety of models.\n-   [**see**](https://easystats.github.io/see/)helps users to utilise visualization for more informative, communicable, and well-rounded scientific reporting\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, readxl, ggstatsplot, performance, parameters, see)\n```\n:::\n\n\n## Import Data\n\nWe will import `Exam_data.csv` and `ToyotaCorolla.xls` into our R environment and save them as tibble data frames. These two datasets will be used in the following two sections respectively.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data <- read_csv(\"data/Exam_data.csv\")\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \"data\")\n```\n:::\n\n\n# Visual Statistical Analysis with ggstatsplot\n\n## One-sample test: gghistostats()\n\nIn the code chunk below, [gghistostats()](https://indrajeetpatil.github.io/ggstatsplot/reference/gghistostats.html) is used to to build an visual of one-sample test on English scores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\n\ngghistostats(\n  data = exam_data,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English Scores\"\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04B_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nIn this example, we are performing a hypothesis testing on whether the centrality measure of English score are different from the test.value \"60\". We have also chosen to use the \"Bayes\" statistical approach. Using this approach, the default centrality parameter that will be computed is the Maximum a Posteriori (MAP) estimator, i.e., the $\\mu_{MAP}$ of 74.74 is the most likely value of population mean based on the observed data and prior knowledge.\n\nThe Student's t-test is run and the output formula shows the following:\n\n-   The Bayes Factor $BF_{01}$ is a measure used in Bayesian hypothesis testing to quantify the strength of evidence against the null hypothesis $H_0$ in favour of the alternative hypothesis $H_1$ . Specifically, $BF_{01}$ represents the ratio of the posterior probability of the null hypothesis to the posterior probability of the alternative hypothesis.\n-   The interpretation of the Bayes factor depends on its value. Here are some common interpretations:\n    -   $BF_{01}$ â‰ˆ 1: The evidence is inconclusive or weak. The data does not strongly favour either the null hypothesis or the alternative hypothesis.\n\n    -   $BF_{01}$ \\> 1: There is evidence in favour of the null hypothesis. The data provides more support for the null hypothesis compared to the alternative hypothesis\n\n    -   $BF_{01}$ \\< 1: There is evidence in favour of the alternative hypothesis. The data provides more support for the alternative hypothesis compared to the null hypothesis\n-   When $log_e(BF_{01})$ is negative, it indicates that $BF_{01}$ is \\< 1 and that evidence is in favour of the alternative hypothesis. On the other hand, if positive, it indicates that $BF_{01}$ is \\> 1 and that evidence is in favour of the null hypothesis. The larger the absolute value, the stronger the evidence\n\nFor more information relating to posterior distributions, refer [here](https://easystats.github.io/bayestestR/reference/describe_posterior.html).\n\n## Two-sample mean test: ggbetweenstats()\n\nIn the code chunk below, [ggbetweenstats()](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html) is used to build a visual for two-sample mean test of Maths scores by gender.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = exam_data,\n  x = GENDER,\n  y = MATHS,\n  type = \"nonparametric\",\n  messages = FALSE\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04B_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nIn this case, we are performing a hypothesis testing on whether the centrality measure of Maths scores between Females and Males are different. We have also chosen to use the \"non-parametric\" statistical approach. Using this approach, the default centrality parameter that will be computed is the median.\n\nThe Wilcoxon rank-sum test is run and the returned formula shows the test statistic and p-value etc. As p-value is 0.91 and more than our significance level of 0.05, we do not reject the null hypothesis. This means that there is insufficient evidence to suggest that the centrality measure (in this case median) of Maths scores between Females and Males are different.\n\n::: callout-note\nFor more details on the types of one-sample tests available in gghistostats, refer [here](https://indrajeetpatil.github.io/ggstatsplot/reference/gghistostats.html).\n:::\n\n## One-way ANOVA test: ggbetweenstats()\n\nIn the code chunk below, [*ggbetweenstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html) is used to build a visual for One-way ANOVA test on English score by race.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbetweenstats(\n  data = exam_data,\n  x = RACE,\n  y = ENGLISH,\n  type = \"parametric\",\n  mean.ci = TRUE,\n  pairwise.comparisons = TRUE,\n  pairwise.display = \"significant\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04B_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nHere, we are performing a hypothesis testing on whether the centrality measure of English scores are different among the races. We have also chosen to use the \"parametric\" statistical approach. Using this approach, the default centrality parameter that will be computed is the mean.\n\nThe Fisher's or Welch's one-way ANOVA test is run and the output formula shows the value of the test statistic and p-value etc. As p-value is less than our significance level of 0.05, we reject the null hypothesis and there is sufficient evidence to suggest that that the centrality measure (in this case mean) of English scores are different among the races.\n\n::: callout-note\nFor more details on the types of centrality analyses, two-sample test, ANOVA tests and pairwise comparison tests available in ggbetweenstats, refer [here](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbetweenstats.html#pairwise-comparison-tests).\n:::\n\n## Test of Correlation: ggscatterstats\n\nIn the code chunk below, [*ggscatterstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggscatterstats.html) is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04B_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nIn this case, we are performing a hypothesis testing on the correlation between English and Maths scores. Without specifying the type of test in our code, the default type is \"parametric\", which uses the Pearson's correlation coefficient test.\n\nThe formula returned shows the test statistic, the p-value and the Pearson's correlation. As p-value is less than our significance level of 0.05, we reject the null hypothesis that the true population correlation coefficient between the two variables is equal to zero. In other words, there is sufficient evidence to conclude that the two variables are linearly correlated.\n\n::: callout-note\nFor more details on the types of correlation analyses available in ggscatterstats, refer [here](For%20more%20details%20on%20the%20centrality%20measures%20and%20tests%20that%20will%20be%20run%20depending%20on%20the%20number%20of%20groups%20and%20type%20chosen%20for%20ggbetweenstats,%20refer%20here.).\n:::\n\n## Test of Association (Dependence)\n\nIn the code chunk below, the Maths scores is binned into a 4-class variables using [*cut()*](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/cut).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data_binned <- exam_data %>% \n  mutate(MATHS_bins = cut(MATHS,\n                          breaks = c(0,60,75,85,100)))\n```\n:::\n\n\nThe code chunk below uses [*ggbarstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbarstats.html) to build a visual for Significant Test of Association.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggbarstats(\n  data = exam_data_binned,\n  x = MATHS_bins,\n  y = GENDER\n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04B_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nHere, we are performing a hypothesis testing on whether there is association between MATHS_bins and GENDER. Without specifying the type of test in our code, the default type is \"parametric\", which uses the Pearson's chi-square test. The null hypothesis in this test assumes that the variables are independent, meaning that there is no association between them.\n\nThe formula returned shows the chi-squared test statistic (with degrees of freedom 3) and the p-value etc. As p-value is more than our significance level of 0.05, we do not reject the null hypothesis. There is insufficient evidence to suggest an association between MATHS_bins and GENDER.\n\n::: callout-note\nFor more details on the types of contingency table analyses available in ggbarstats, refer [here](https://indrajeetpatil.github.io/ggstatsplot/reference/ggbarstats.html).\n:::\n\n# Visualising Models with parameters package\n\n## Multiple Regression Model using lm()\n\nThe code chunk below calibrates a multiple linear regression model using lm() of Base Stats in R.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM +\n              Weight + Guarantee_Period, data = car_resale)\nmodel\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n```\n:::\n:::\n\n\n### Model Diagnostic: Checking for Multicollinearity\n\nWe can use [check_collinearity()](https://easystats.github.io/performance/reference/check_collinearity.html) of [**performance**](https://easystats.github.io/performance/) package to check for multicollinearity.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_collinearity(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n```\n:::\n:::\n\n\nWe can further plot it using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_c <- check_collinearity(model)\nplot(check_c)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04B_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n### Model Diagnostic: Checking normality assumption\n\nWe can use [*check_normality()*](https://easystats.github.io/performance/reference/check_normality.html) of [**performance**](https://easystats.github.io/performance/) package to check the normality assumption.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n <- check_normality(model1)\n\nplot(check_n)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04B_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n### Model Diagnostic: Check model for homogeneity of variance\n\nWe can use [*check_heteroscedasticity()*](https://easystats.github.io/performance/reference/check_heteroscedasticity.html) of [**performance**](https://easystats.github.io/performance/) package to check for homogeneity of variance.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_h <- check_heteroscedasticity(model1)\n\nplot(check_h)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04B_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n### Model Diagnostic: Complete check\n\nWe can also perform the complete check using [*check_model()*](https://easystats.github.io/performance/reference/check_model.html).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_model(model1)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04B_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n### Visualising Regression Parameters: see method\n\nIn the code below, plot() of **see** package and parameters() of **parameters** package is used to visualise the parameters of a regression model.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(parameters(model1))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04B_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n### Visualising Regression Parameters: ggcoedstats() methods\n\nIn the code below, [*ggcoefstats()*](https://indrajeetpatil.github.io/ggstatsplot/reference/ggcoefstats.html) of **ggstatsplot** package to visualise the parameters of a regression model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggcoefstats(model1, output = \"plot\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex04B_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n# References\n\n-   [R for Visual Analytics - Chpt 9 Visual Statistical Analysis](https://r4va.netlify.app/chap09.html)\n",
    "supporting": [
      "Hands-on_Ex04B_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}